@model IMDB.Models.Actor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminPartial.cshtml";
}
@{
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_AdminPartial.cshtml";
    }
}

<script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>

<h2>Create</h2>

@using (Html.BeginForm("Create", "Actor", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "AddForm", onsubmit = "return(CheckForm());" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Actor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Male", Value = "Male" },
                    new SelectListItem{ Text="Female", Value = "Female" },
                }, "Select Gender", htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="Image" title="Actor Image" type="file" name="file" accept=".png, .jpg, .jpeg" required />
                <span class="field-validation-error text-danger" id="ImageValidation" style="display:none;"
                      data-valmsg-for="Image"
                      data-valmsg-replace="true">File extention should be (.png, .jpg, .jpeg)</span>
                @*@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function CheckForm() {
        myData = $("#Image");
        var temp;
        var fileUpload = $("#Image").get(0);
        var files = fileUpload.files;

        // Create FormData object
        var fileData = new FormData();

        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }

        if ($("#AddForm").valid()) {

            
                $.ajax({
                    async: false,
                    global: false,
                    type: "POST",
                    url: "/Actor/CheckFileExtension",
                    data: fileData,
                    contentType: false, // Not to set any content header
                    processData: false,
                    success: function (response) {

                        if (response.result == 1) {

                            temp = true;
                        }
                        else {
                            temp = false;
                            $("#ImageValidation").show();

                        }

                    }



                })

                if (temp == true) {
                    return true;
                }
                else {
                    return false;
                }

            
            
        }
        else {
            
            return false;
        }



    }
</script>