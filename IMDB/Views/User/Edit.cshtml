@model IMDB.ViewModels.EditUserViewModel

@{
    Layout = "~/Views/Shared/_AdminPartial.cshtml";
}
<script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>

@using (Html.BeginForm("Edit", "User", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "EditForm", onsubmit = "return(CheckForm());" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ProfileImage, new { htmlAttributes = new { @class = "form-control" } })
                <input id="CoverImage" title="Upload images" type="file" name="file" style="padding: 10px;" accept=".jpg, .jpeg, .png" />
                <span class="field-validation-error text-danger" id="ImageValidation" style="display:none;"
                      data-valmsg-for="Image"
                      data-valmsg-replace="true">File extention should be (.png, .jpg, .jpeg)</span>
                @Html.ValidationMessageFor(model => model.ProfileImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EmailConfirmed)
                    @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
        @Html.HiddenFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
        @*@Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!--<div class="form-group">-->
        @*@Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">
            <div class="checkbox">-->
        @Html.HiddenFor(model => model.TwoFactorEnabled)
        @*@Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })*@
        @*</div>
                </div>
            </div>*@

        <!--<div class="form-group">-->
        @*@Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">-->
        @Html.HiddenFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
        @*@Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })*@
        @*</div>
            </div>*@

        <!--<div class="form-group">-->
        @*@Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">
            <div class="checkbox">-->
        @Html.HiddenFor(model => model.LockoutEnabled)
        @*@Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })*@
        @*</div>
                </div>
            </div>*@

        <!--<div class="form-group">-->
        @*@Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <!--<div class="col-md-10">-->
        @Html.HiddenFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
        @*@Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })*@
        @*</div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function CheckForm() {

        var temp;
        var fileUpload = $("#CoverImage").get(0);
        var files = fileUpload.files;

        // Create FormData object
        var fileData = new FormData();

        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }

        if ($("#EditForm").valid()) {


            if (i > 0) {
                $.ajax({
                    async: false,
                    global: false,
                    type: "POST",
                    url: "/User/CheckFileExtension",
                    data: fileData,
                    contentType: false, // Not to set any content header
                    processData: false,
                    success: function (response) {

                        if (response.result == 1) {

                            temp = true;
                        }
                        else {
                            temp = false;
                            $("#ImageValidation").show();

                        }

                    }



                })
                if (temp == true) {
                    return true;
                }
                else {
                    return false;
                }
            }

        }
        else {

            return false;
        }



    }
</script>