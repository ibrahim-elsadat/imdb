@model IMDB.ViewModels.MovieViewModel
@{
    Layout = "~/Views/Shared/_AdminPartial.cshtml";
}
<script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>
<h2>Create</h2>

@using (Html.BeginForm("Create", "Movie", null, FormMethod.Post, new { enctype = "multipart/form-data", id="AddForm" ,onsubmit = "return(CheckForm());" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Movie</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Rank, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Rank, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Movie.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Genre, "Genre", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Genre", null, "Select Genre", htmlAttributes: new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Country", null, "Select Country", htmlAttributes: new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Director, "Director", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Director", null, "Select Director", htmlAttributes: new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Actors, "Actors", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Actor", null,
           htmlAttributes: new { @class = "form-control chosen-Actors", multiple = "multiple" })

            <span class="field-validation-error text-danger" id="SelectOne" style="display:none;"
                  data-valmsg-for="Actor"
                  data-valmsg-replace="true">Select at least one actor.</span>

            

            @*@Html.ValidationMessageFor(model => model.Actor, "", new { @class = "text-danger" })*@
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.SequelId, "SequelId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SequelId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SequelId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input id="Image" title="Movie Image" type="file" name="file" accept=".png, .jpg, .jpeg" required />

            <span class="field-validation-error text-danger" id="ImageValidation" style="display:none;"
                  data-valmsg-for="Image"
                  data-valmsg-replace="true">File extention should be (.png, .jpg, .jpeg)</span>

            @Html.ValidationMessageFor(model => model.Movie.Image, "", new { @class = "text-danger" })
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script src="~/Scripts/chosen.jquery.js"></script>
<link href="~/Content/bootstrap-chosen.css" rel="stylesheet" />

<script type="text/javascript">
    $(function () {

        $(".chosen-Actors").chosen();

    });
</script>



<script>

    $(document).ready(function () {

        $("#Actor").change(function () {


            id = $(this).val();

            if (id == null) {
                $("#SelectOne").show();
            }
            else {
                $("#SelectOne").hide();
            }

        })

    })

</script>
    
<script>
    function CheckForm() {
        id = $("#Actor").val();
        myData = $("#Image");
        var temp;
        var fileUpload = $("#Image").get(0);
        var files = fileUpload.files;

        // Create FormData object  
        var fileData = new FormData();

        // Looping over all files and add it to FormData object  
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }

        if ($("#AddForm").valid()) {
            
            if (id != null) {
                $.ajax({
                    async: false,
                    global:false,
                    type: "POST",
                    url: "/Movie/CheckFileExtension",
                    data: fileData,
                    contentType: false, // Not to set any content header  
                    processData: false,
                    success: function (response) {

                        if (response.result == 1) {
                            
                            temp = true;
                        }
                        else {
                            temp = false;
                            $("#ImageValidation").show();
                            
                        }

                    }
                    


                })

                if (temp ==true) {
                    return true;
                }
                else {
                    return false;
                }
                
            }
            else {
                $("#SelectOne").show();
                return false;
            }
        }
        else
        {
            if (id == null) {
                $("#SelectOne").show();
            }
            return false;
        }
        


    }
</script>

@*<script>

    $(document).ready(function () {

        $("#Actor").change(function () {
            $("#Actor").validate({
                rules: {
                    things: {
                        required: true
                    }
                },
                messages: {
                    things: {
                        required: "Please select at least one thing."
                    }
                }
            });

            

        })

    })

</script>*@

@*<script>
    $(function () {
        $("#Actor").validate({
            rules: {
                things: {
                    required: true
                }
            },
            messages: {
                things: {
                    required: "Please select at least one thing."
                }
            }
        });
    });
</script>*@
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
